<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:c="http://www.springframework.org/schema/c"
	   xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		"
	default-lazy-init="false">

	<description>缓存管理 redis session集群实现</description>
	<!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:properties/redis.properties" />


	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="jedisConnectionFactory"
		  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
		  c:template-ref="redisTemplate" />

	<!-- 自定义实现的redisCache-->
	<bean id="redisCached" class="com.dou.kylin.security.shiro.redis.RedisCache">
		<property name="redisTemplate" ref="redisTemplate" />
		<property name="expire" value="86400" />
	</bean>

	<bean id="shiroRedisCacheManager" class="com.dou.kylin.security.shiro.redis.ShiroRedisCacheManager">
		<property name="cache" ref="redisCached" />
	</bean>


	<bean id="sessionDAO" class="com.dou.kylin.security.shiro.session.spinach.ShiroSessionDao">
		<property name="sessionIdGenerator" ref="sIdGen" />
		<property name="cache" ref="redisCached"></property>
		<property name="expire" value="1800"></property>
		<property name="cacheManager" ref="shiroRedisCacheManager" />
	</bean>
	<!-- 会话ID生成器 可以不必写，shiro默认就是用这个JavaUuidSessionIdGenerator方式实现
        这里主要体现你可以实现自己的idGen
    -->
	<bean id="sIdGen" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- redis 凭证匹配器 -->
	<bean id="redisCredentialsMatcher" class="com.dou.kylin.security.shiro.redis.credentials.RedisLoginMatcher">
		<property name="cache" ref="redisCached"></property>
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="2" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>
</beans>