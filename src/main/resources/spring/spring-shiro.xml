<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.1.xsd"
       default-lazy-init="true">

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:properties/kylin.properties" />

       <import resource="classpath:cache/shiro-ehcache.xml" />
    <!--<import resource="classpath:cache/shiro-redis.xml" />-->

    <!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的ShiroDbRealm.java -->
       <bean id="systemAuthorizingRealm" class="com.dou.kylin.security.shiro.common.realm.SystemAuthorizingRealm" >
           <property name="credentialsMatcher" ref="ehcacheCredentialsMatcher" />
       </bean>

       <!-- CAS认证过滤器 -->
    <!--   <bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
            <property name="failureUrl" value="${adminPath}/login"/>
       </bean>-->

       <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
            <!-- Shiro的核心安全接口,这个属性是必须的 -->
            <property name="securityManager" ref="securityManager"/>
            <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
            <property name="loginUrl" value="${loginUrl}"/>
            <!-- 登录成功后要跳转的连接 -->
            <property name="successUrl" value="${successUrl}"/>
            <!-- 用户访问未对其授权的资源时,所显示的连接 -->
            <property name="unauthorizedUrl" value="${unauthorizedUrl}"/>

            <property name="filters">
                <map>
                   <!-- <entry key="cas" value-ref="casFilter"/>-->
                    <entry key="authc" value-ref="captchaFormAuthenticationFilter"/>
                </map>
            </property>
            <!-- Shiro连接约束配置,即过滤链的定义 -->
            <property name="filterChainDefinitions">
                <value>
                /static/** = anon
                ${adminPath}**=authc
                ${adminPath}/getVerifyCodeImage=anon
                ${adminPath}/login = anon
                ${adminPath}/logout = logout
                /** = authc
                </value>
            </property>
        </bean>

        <!-- 定义Shiro安全管理配置 -->
       <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
              <property name="realm" ref="systemAuthorizingRealm"/>
              <property name="cacheManager" ref="shiroEhcacheManager" />
              <property name="sessionManager" ref="sessionManager" />
       </bean>

       <!-- 自定义会话管理配置 -->
       <bean id="sessionManager" class="com.dou.kylin.security.shiro.session.jeesite.SessionManager">
            <property name="sessionDAO" ref="sessionDAO"/>
            <!-- 会话超时时间，单位：毫秒  -->
            <property name="globalSessionTimeout" value="${session.sessionTimeout}"/>
            <!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
            <property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
            <!--  	<property name="sessionValidationSchedulerEnabled" value="false"/> -->
            <property name="sessionValidationSchedulerEnabled" value="true"/>
            <property name="sessionIdCookie" ref="sessionIdCookie"/>
            <property name="sessionIdCookieEnabled" value="true"/>
       </bean>


       <!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
            当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
       <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
          <constructor-arg name="name" value="kylin.session.id"/>
           <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
           <property name="path" value="/" />
       </bean>

       <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
       <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

       <!-- AOP式方法级权限检查  在后端使用注解的时候要开启下面两个bean-->
       <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
              <property name="proxyTargetClass" value="true" />
       </bean>

       <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
           <property name="securityManager" ref="securityManager"/>
       </bean>



</beans>